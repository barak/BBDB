@SET_MAKE@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_DATA = @INSTALL_DATA@

LN_S = @LN_S@
TAR = @TAR@
COMPRESS = @COMPRESS@
COMPEXT = @COMPEXT@

ETAGS = @ETAGS@
EMACS = @EMACS@ -no-site-file -no-init-file

PACKAGEDIR = @PACKAGEDIR@
SYMLINKS = @SYMLINKS@
LINKPATH = @LINKPATH@

# Deployment
TARFILES = ChangeLog INSTALL Makefile README                        \
           aclocal.m4 configure configure.in install-sh Makefile.in \
           bits lisp misc tex texinfo utils

syntax:
	@echo "" ;\
	echo "*** make one or more of: rmail vm mhe gnus all bbdb" ;\
	echo ""

all: bbdb rmail vm mhe gnus info

bbdb:
	cd lisp; $(MAKE) bbdb

rmail:
	cd lisp; $(MAKE) rmail

vm:
	cd lisp; $(MAKE) vm

mhe:
	cd lisp; $(MAKE) mhe

gnus:
	cd lisp; $(MAKE) gnus

autoloads:
	cd lisp; $(MAKE) autoloads

autoloadsc:
	cd lisp; $(MAKE) autoloadsc

install-pkg: bbdb autoloadsc info
	rm -fr $(PACKAGEDIR)/lisp/bbdb $(PACKAGEDIR)/info/bbdb \
               $(PACKAGEDIR)/etc/bbdb; \
        if test "x$(SYMLINKS)" = "xno" ; then \
          mkdir -p -m 0755 $(PACKAGEDIR)/lisp/bbdb; \
          for i in `ls lisp/*.elc` ; do \
            $(INSTALL_DATA) `echo $$i | sed 's/c$$//g'` \
                            $(PACKAGEDIR)/lisp/bbdb ; \
            $(INSTALL_DATA) $$i $(PACKAGEDIR)/lisp/bbdb ; \
          done ; \
          mkdir -p -m 0755 $(PACKAGEDIR)/info/bbdb ; \
          for i in `ls texinfo/*.info* ` ; do \
            $(INSTALL_DATA) $$i $(PACKAGEDIR)/info/bbdb ; \
          done ; \
          mkdir -p -m 0755 $(PACKAGEDIR)/etc/bbdb/tex \
                           $(PACKAGEDIR)/etc/bbdb/utils ; \
          for i in `ls tex/*.tex` ; do \
            $(INSTALL_DATA) $$i $(PACKAGEDIR)/etc/bbdb/tex ; \
          done ; \
          for i in `ls -d utils/* |egrep -v '(RCS|SCCS|CVS)'` ; do \
            $(INSTALL_DATA) $$i $(PACKAGEDIR)/etc/bbdb/utils ; \
          done ; \
        else \
          if test "x$(LINKPATH)" = "x" ; then \
            ln -s `pwd`/lisp $(PACKAGEDIR)/lisp/bbdb ; \
            ln -s `pwd`/texinfo $(PACKAGEDIR)/info/bbdb ; \
          else \
              ln -s $(LINKPATH)/lisp $(PACKAGEDIR)/lisp/bbdb ; \
              ln -s $(LINKPATH)/texinfo $(PACKAGEDIR)/info/bbdb ; \
          fi ; \
        fi

info:
	cd texinfo; $(MAKE) info

clean:
	cd lisp; $(MAKE) clean
	cd texinfo; $(MAKE) clean

distclean: clean
	cd texinfo; $(MAKE) distclean
	cd lisp; $(MAKE) distclean
	$(RM) -f config.status config.cache config.status config.log
	$(RM) *.tar.gz
	$(RM) .#*

cvsclean: distclean  # configure & Makefile are in CVS, but shouldn't be.

# Backward compatibility
reallyclean: distclean

# tarball
tar: $(TARFILES)
	@if test "x$(TAR)" = "x" ; then                                    \
          echo "Sorry, no \`tar' program available." ;                     \
        else                                                               \
          name=`sed -n 's/^(defconst bbdb-version "\([0-9]\.[0-9][0-9]*\).*/bbdb-\1/p' lisp/bbdb.el` ;                                                    \
          rm -f $${name} ; $(LN_S) . $${name} ;                            \
          if test "x$(COMPRESS)" = "x" ; then                              \
            echo "Sorry, no compression program available." ;              \
            echo "The tarball will not be compressed." ;                   \
            echo "creating tar file $${name}.tar..." ;                     \
            $(TAR) --exclude=CVS  --exclude=".*" -vchf $${name}.tar        \
            `echo $(TARFILES) | sed "s|^|$${name}/|g; s| | $${name}/|g"` ; \
          else                                                             \
            echo "creating tar file $${name}.tar.$(COMPEXT)..." ;          \
            $(TAR) --exclude=CVS  --exclude=".*" -vchf - `echo $(TARFILES) \
            | sed "s|^|$${name}/|g; s| | $${name}/|g"`                     \
            | $(COMPRESS) > $${name}.tar.$(COMPEXT) ;                      \
          fi ;                                                             \
          rm $${name} ;                                                    \
        fi

dist: distclean info autoloads tar

TAGS: tags

tags:
	@if test "x$(ETAGS)" = "x" ; then                 \
           echo "Sorry, no \`etags' program available." ; \
         else                                             \
           $(ETAGS) */*.el                              ; \
         fi
